generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model knex_migrations {
  id             Int       @id @default(autoincrement())
  name           String?   @db.VarChar(255)
  batch          Int?
  migration_time DateTime? @db.Timestamptz(6)
}

model knex_migrations_lock {
  index     Int  @id @default(autoincrement())
  is_locked Int?
}

model user {
  id           String        @id @db.Uuid
  username     String        @unique(map: "user_username_unique") @db.VarChar(255)
  password     String        @db.VarChar(255)
  refreshToken refreshToken?
}

model refreshToken {
  userId       String @id @db.Uuid
  refreshToken String @unique(map: "refreshtoken_refreshtoken_unique") @db.VarChar(255)
  user         user   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "refreshtoken_userid_foreign")
}

enum Category {
  PIPE
  FITTING
  VALVES
}

enum Incoterms {
  FCA
  CIF
  DEP
}

enum Status {
  ISSUE_REQUEST_SENT
  MATERIAL_REQUEST_SENT
  PURCHASE_REQUEST_SENT
  CHECKOUT
  CREATING_PURCHASE_ORDER
  PURCHASE_ORDER_SENT
  DELIVERY
  DELIVERED
  ISSUE_GOOD_SENT
  CANCELLED
  SELECTED_FOR_CHECKOUT
  BOOK_REQUEST
  DECLINED
  BOOK_CANCELLED
}
